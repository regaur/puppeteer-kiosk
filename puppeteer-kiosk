#!/usr/bin/node

const userDataDir = process.env.HOME + '/.config/chromium'

const puppeteer = require('puppeteer')
const opacity = require('../opacity')({userDataDir})

const blackBody = "data:text/html;charset=utf-8;base64,PGJvZHkgc3R5bGU9ImJhY2tncm91bmQ6IGJsYWNrOyI+PC9ib2R5Pg=="

const URI = process.argv[2] || 'about:blank'

const DEVTOOLS = 0

;(async () => {
  const args=[
    '--no-default-browser-check',
    '--no-first-run',
    '--autoplay-policy=no-user-gesture-required',
    '--disable-gesture-requirement-for-media-playback',
    '--use-fake-ui-for-media-stream',

    DEVTOOLS ? 
      '--auto-open-devtools-for-tabs'
      : '--kiosk',

    '--disable-pinch',
    '--overscroll-history-navigation=0',
    '--noerrdialogs',
    '--start-fullscreen',
    '--disable-infobars',
    '--disable-session-crashed-bubble',
    '--password-store=basic',
    blackBody
  ]

  opacity(0) // hide browser window as chromium flickers into existence

  const browser = await puppeteer.launch({
    timeout: 90000,
    args,
    headless: false,
    ignoreDefaultArgs: ['--mute-audio'],
    userDataDir,
    devtools: true,
    defaultViewport: {
      // TODO: this works for
      // - a 1920x1080 screen
      // - same but roated
      // - two 1920x1080 on top of each other
      // ..but: it realy wants be a cli argument
      // or a service that restarts the browser when a differnt
      // resolution is requested.
      width: 1920,
      height: 1920*2,
      hasTouch: true
    }
  })
  const page = await browser.newPage();
  await page.goto(URI, {
    timeout: 90000
  })
  page.bringToFront()
  setTimeout( ()=> opacity(100), 1000)
})();
